[진경수]

1.PreparedStatement 와 Statement의 차이점은 무었인가?(어느경우에 사용하는가?)
	Statement는 메소드중에 쿼리문의 인자를 전달할 수있는 메소드가 없다
	PreparedStatement객체는 Connnection객체의 prepareStatement메소드를 통해서 sql문을 전달할 수 있다.
	★PreparedStatement 와 Statement의 가장 큰 차이점은 캐시(cache) 사용여부이다.
	Statement를 사용하면 매번 쿼리를 수행할 때마다 1) ~ 3) 단계를 거치게 되고, 
	PreparedStatement는 처음 한 번만 세 단계를 거친 후 캐시에 담아 재사용을 한다는 것이다. 
	만약 동일한 쿼리를 반복적으로 수행한다면 PreparedStatment가 DB에 훨씬 적은 부하를 주며, 성능도 좋다.

	ex1) 특정 행 검색 명령 sql일 경우
		<Statement>		
		String sql = "SELECT colum1, colum2 FROM tablename WHERE colum1 = '" + value + "'";
		try{
			Connection connection = getConnection();
			Statement statement = connection.createStatement();
			ResultSet resultSet = stmt.executeQuery(sql);
		}catch(SQLException ㄷ){
			e.printStackTrace();
		}
		
		<PreparedStatement>
		String sql = "SELECT colum1, colum2 FROM tablename WHERE colum1 = ?";
		try{
			Connection connection = getConnection();
			PreparedStatement statement = connection.preparedStatement();
			statement.setString(1,value);
			ResultSet resultSet = stmt.executeQuery(sql);
		}catch(SQLException ㄷ){
			e.printStackTrace();
		}
	
	ex2) 쿼리 반복수행 작업일 경우
		<Statement>	
		for (int i = 0; i < 10000; i++) {
			statement.executeUpdate("INSERT INTO TEST_TABLE VALUES('"+content+"');
		}
	
	
	
		<PreparedStatement>
		statement = conn.preapreStatement("INSERT INTO TEST_TABLE VALUES(?)");
		for (int i = 0; i < 10000; i++) {
			statement.setString(1, content+i);
			statement.executeUpdate();
		}

